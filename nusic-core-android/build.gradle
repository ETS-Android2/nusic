/**
 * Copyright (C) 2013 Johannes Schnatterer
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This file is part of nusic.
 *
 * nusic is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * nusic is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with nusic.  If not, see <http://www.gnu.org/licenses/>.
 */
apply plugin: "java"
compileJava {
    sourceCompatibility = nusicSourceCompatibility
    targetCompatibility = nusicTargetCompatibility
    compileJava.options.encoding = nusicSourceEncoding
    compileTestJava.options.encoding = nusicSourceEncoding
}

dependencies {
    // Nusic modules
    compile(
            project(":nusic-data-api"),
            project(":nusic-core-api"),
            project(":nusic-util")
    )

    // External dependencies
    compile(
            "fm.last:coverartarchive-api:2.1.0",
            libraries.roboguice,
            libraries.slf4j,
            libraries.guava
    )
    compile( "info.schnatterer.musicbrainzws2-java:musicbrainzws2-java:3.2.0",) {
        exclude group: 'org.slf4j', module: 'slf4j-jdk14'
    }
    compileOnly(
            // Android API
            libraries.android,
            // Enable annotation database to improve performance
            libraries.roboblender
    )

    // Test dependencies
    testCompile(
            libraries.junit,
            // Android API - needed for @SuppressLint
            libraries.android
    )
}
tasks.withType(JavaCompile) { task ->
    /* This defines the class name of the annotation database, which is then generated by
 * roboblender annotation processor*/
    options.compilerArgs << "-AguiceAnnotationDatabasePackageName=${project.group}.annotation.nusicCoreAndroid"
}

// Workaround for GRADLE-1682, see http://stackoverflow.com/a/14947906/1845976
tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
    // Exclude inner classes
    exclude '**/*$*.class'
}

    sonarqube {
        //noinspection GroovyAssignabilityCheck
        properties {
            def compileDependencies = project.configurations.compile.files.collect {it.path} join(",")
            def compileOnlyDependencies = project.configurations.compileOnly.files.collect {it.path}join(",")

        property "sonar.java.libraries", "$compileDependencies,$compileOnlyDependencies"
        property "sonar.test.libraries", "$compileDependencies,$compileOnlyDependencies"

    }
}
